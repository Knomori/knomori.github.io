<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>建站纪念</title>
    <url>/2021/01/31/%E5%BB%BA%E7%AB%99%E7%BA%AA%E5%BF%B5/</url>
    <content><![CDATA[<p>事情的起源可能还要从那次计网课开始说起。</p>
<p>我们的计网老师是个不折不扣的“社会人”，雷厉风行、卓尔不群。每次上课的时候他都会随口布置一些他认为很简单的任务。但实际上，那时的我们从来没有听过他布置的任务，因为他从来不检查。可能是由于那时我们根本不懂得怎么搞计网，最多也就是买一个域名和一个免费的服务器，简单地在上面写写画画，等到服务器过期后就再也没有管过。</p>
<p>不过，这波啊。直到已经结课后的这个寒假，就想着做点什么吧。其实我也是早就有搭建一个小博客的想法，但是一直没有付诸于实践，这次趁着寒假终于有机会去实践它。</p>
<p>我以前没怎么接触过前端这一部分，很多东西其实还是要参考其他有经验的人。在此我非常感谢<a href="https://www.cnblogs.com/huanhao/p/hexobase.html#%E5%AE%89%E8%A3%85hexo%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8D%9A%E5%AE%A2">huanhao</a>，是他分享了博客的搭建教程，写的非常详细。我也是主要参考了这篇博客，没有他的话我可能还要走不少弯路。</p>
<p>有时候看着别人的小站，自己也不禁在想，什么时候才能写出这么好的博客呢？我希望在这里分享我的感想、教程和自己各种项目上踩过的坑，将他记录下来，不仅可以方便自己日后查阅，同时也可能帮助到需要的人。</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>建站纪念</tag>
      </tags>
  </entry>
  <entry>
    <title>使用树莓派和samba搭建个人NAS</title>
    <url>/2021/02/06/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E5%92%8Csamba%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BANAS/</url>
    <content><![CDATA[<p>我们知道如果想要共享文件，在Linux对Linux的环境下，最简单的方法就是通过NIS了；而Windows对Windows，最简单的方法则是“网上邻居”。那如果局域网中既有Windows也有Linux而且想要共享文件系统的话，那该怎么办？</p>
<p>那就使用SAMBA服务器好了。</p>
<p>SAMBA可以让Linux加入Windows的网上邻居支持，让不同的平台可以共享文件系统，非常好用。而且它的配置极其简单。</p>
<h3 id="环境简介"><a href="#环境简介" class="headerlink" title="环境简介"></a>环境简介</h3><p>使用树莓派的系统如下所示，基于的是Debian的64位的操作系统：</p>
<p><a href="https://imgchr.com/i/yY6Zod"><img src="https://s3.ax1x.com/2021/02/06/yY6Zod.png" alt="系统信息"></a></p>
<p><strong>提示：</strong> 由于树莓派每次接入局域网时，路由器给分配的IP不固定，所以建议提前在路由器的管理页面进行树莓派的硬件MAC与IP地址的绑定。这样每次树莓派连接到路由器都会给分配一个固定的IP.</p>
<h3 id="安装Samba和配套软件"><a href="#安装Samba和配套软件" class="headerlink" title="安装Samba和配套软件"></a>安装Samba和配套软件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo apt install samba samba-common-<span class="built_in">bin</span></span><br></pre></td></tr></table></figure>
<p>期间会有此选项选择是即可</p>
<h3 id="配置Samba并指定共享的目录"><a href="#配置Samba并指定共享的目录" class="headerlink" title="配置Samba并指定共享的目录"></a>配置Samba并指定共享的目录</h3><p>samba的配置文件路径为：<code>/etc/samba/smb.conf</code>，可以使用<code>nano</code>或<code>vim</code>编辑器编辑此文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>
<p>在最后添加自己的配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Shared]</span><br><span class="line">   path &#x3D; &#x2F;media&#x2F;pi #要共享文件夹的路径</span><br><span class="line">   valid users &#x3D; pi	#允许的用户</span><br><span class="line">   browseable &#x3D; yes	#浏览及写入的权限</span><br><span class="line">   writable &#x3D; yes	</span><br><span class="line">   read only &#x3D; no</span><br></pre></td></tr></table></figure>
<p>如果要共享的文件夹很多的话，也可以添加多个自己的配置。</p>
<p>如果要共享的是外置硬盘，位置是<code>/media/pi</code></p>
<p>编辑完成之后，我们可以对写入的信息进行测试，防止出错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">testparm</span><br></pre></td></tr></table></figure>
<p>如果没有提示错误信息，就表示写入的格式正确。</p>
<p><a href="https://imgchr.com/i/yYgSv6"><img src="https://s3.ax1x.com/2021/02/06/yYgSv6.png" alt="测试写入的是否正确"></a></p>
<h3 id="为samba分配可访问的用户并启动此服务"><a href="#为samba分配可访问的用户并启动此服务" class="headerlink" title="为samba分配可访问的用户并启动此服务"></a>为samba分配可访问的用户并启动此服务</h3><p>设置加入共享的用户pi并设置密码（此密码用于samba登陆，可以与pi用户原本的密码不一致）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure>
<p><a href="https://imgchr.com/i/yYgRsK"><img src="https://s3.ax1x.com/2021/02/06/yYgRsK.png" alt="给samba分配可访问的用户pi" style="zoom: 67%;" /></a></p>
<p>到此samba的配置工作可以说完成啦。</p>
<p>接下来我们启动samba服务：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo systemctl start smbd</span><br></pre></td></tr></table></figure>
<p>查看samba服务状态：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">systemctl status smbd</span><br></pre></td></tr></table></figure>
<p>如果显示绿色running表示服务已经正常启动并运行啦：</p>
<p><a href="https://imgchr.com/i/yta1BR"><img src="https://s3.ax1x.com/2021/02/07/yta1BR.png" alt="查看samba状态"></a></p>
<h3 id="Linux用户访问文件服务"><a href="#Linux用户访问文件服务" class="headerlink" title="Linux用户访问文件服务"></a>Linux用户访问文件服务</h3><p>以KDE桌面环境为例，可以直接在地址栏输入以下格式的地址就可以看到我们设置的共享文件夹或磁盘啦：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">smb:/你的树莓派IP地址</span><br></pre></td></tr></table></figure>
<p><a href="https://imgchr.com/i/yY2znK"><img src="https://s3.ax1x.com/2021/02/06/yY2znK.png" alt="Linux用户登陆"></a></p>
<p>我们还可以将这个共享的地址固定到侧边栏，方便日后直接访问。可以在侧边栏的 <strong><em>远程</em></strong> 选项右键-&gt;<strong><em>添加位置</em></strong> ，配置好后即可快速访问。</p>
<h3 id="Windows用户访问"><a href="#Windows用户访问" class="headerlink" title="Windows用户访问"></a>Windows用户访问</h3><p>Windows用户可以直接在 <em>此电脑</em> 右键，选择 <em>映射网络驱动器</em> 填写好格式后即可访问。这里注意必须填写正确的格式及共享文件夹的名称。</p>
<p>Windows添加后下次打开此电脑会发现共享的文件夹已经固定在了下面。</p>
<p><a href="https://imgchr.com/i/yYRovt"><img src="https://s3.ax1x.com/2021/02/06/yYRovt.png" alt="Windows用户"></a></p>
<h3 id="防踩坑指南"><a href="#防踩坑指南" class="headerlink" title="防踩坑指南"></a>防踩坑指南</h3><p>第一次配置时我们会发现，明明配置好了，打开网络都能看到我们的这个文件夹了，但为什么就是看不到我插入的硬盘或U盘呢？其实，如果你的树莓派当初选择的是带桌面启动的模式，此服务必须在进入桌面后才可以生效。使用VNC登陆进树莓派即可。如果是家用则完全可以设置树莓派是开机自动以pi用户自动登录，实现此服务插电即用。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>使用树莓派搭建Aria2下载服务器</title>
    <url>/2021/02/25/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BAAria2%E4%B8%8B%E8%BD%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h3 id="Aria2-超快速下载实用程序（简介）"><a href="#Aria2-超快速下载实用程序（简介）" class="headerlink" title="Aria2 - 超快速下载实用程序（简介）"></a>Aria2 - 超快速下载实用程序（简介）</h3><p>aria2是用于下载文件的实用程序。支持的协议是HTTP（S），FTP，SFTP，BitTorrent和Metalink。  aria2可以从多个来源/协议下载文件，并尝试利用最大下载带宽。它支持同时从HTTP（S）/ FTP /  SFTP和BitTorrent下载文件，而从HTTP（S）/ FTP /  SFTP下载的数据上传到BitTorrent群。使用Metalink的块校验和，aria2在下载BitTorrent之类的文件时会自动验证数据块。</p>
<p><a href="https://github.com/aria2/aria2">GitHub项目地址</a></p>
<h3 id="环境简介"><a href="#环境简介" class="headerlink" title="环境简介"></a>环境简介</h3><p>本次使用的树莓派环境是：基于Debian的64位操作系统，详情如下：</p>
<p><a href="https://img.imgdb.cn/item/603717f75f4313ce2595caec.jpg"><img src="https://img.imgdb.cn/item/603717f75f4313ce2595caec.jpg" alt="环境简介"></a></p>
<h3 id="安装Aria2并配置"><a href="#安装Aria2并配置" class="headerlink" title="安装Aria2并配置"></a>安装Aria2并配置</h3><p>我们直接使用软件源安装：</p>
<p><code>sudo apt install aria2</code></p>
<p>接下来创建配置文件：</p>
<p><code>mkdir -p ~/.config/aria2/    #创建存放配置的文件夹</code></p>
<p><code>nano ~/.config/aria2/aria2.config    #添加一个aria2的配置文件（注意不要用sudo）</code></p>
<p>在这个文件中写入我们自己的配置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#后台运行</span></span><br><span class="line">daemon=true</span><br><span class="line"><span class="comment">#用户名</span></span><br><span class="line"><span class="comment">#rpc-user=user</span></span><br><span class="line"><span class="comment">#密码</span></span><br><span class="line"><span class="comment">#rpc-passwd=passwd</span></span><br><span class="line"><span class="comment">#设置加密的密钥</span></span><br><span class="line">rpc-secret=secret</span><br><span class="line"><span class="comment">#允许rpc</span></span><br><span class="line">enable-rpc=true</span><br><span class="line"><span class="comment">#允许所有来源, web界面跨域权限需要</span></span><br><span class="line">rpc-allow-origin-<span class="built_in">all</span>=true</span><br><span class="line"><span class="comment">#是否启用https加密，启用之后要设置公钥,私钥的文件路径</span></span><br><span class="line"><span class="comment">#rpc-secure=true</span></span><br><span class="line"><span class="comment">#启用加密设置公钥</span></span><br><span class="line"><span class="comment">#rpc-certificate=/home/pi/.config/aria2/example.crt</span></span><br><span class="line"><span class="comment">#启用加密设置私钥</span></span><br><span class="line"><span class="comment">#rpc-private-key=/home/pi/.config/aria2/example.key</span></span><br><span class="line"><span class="comment">#允许外部访问，false的话只监听本地端口</span></span><br><span class="line">rpc-listen-<span class="built_in">all</span>=true</span><br><span class="line"><span class="comment">#RPC端口, 仅当默认端口被占用时修改</span></span><br><span class="line"><span class="comment">#rpc-listen-port=6800</span></span><br><span class="line"><span class="comment">#最大同时下载数(任务数), 路由建议值: 3</span></span><br><span class="line"><span class="built_in">max</span>-concurrent-downloads=<span class="number">5</span></span><br><span class="line"><span class="comment">#断点续传</span></span><br><span class="line"><span class="keyword">continue</span>=true</span><br><span class="line"><span class="comment">#同服务器连接数</span></span><br><span class="line"><span class="built_in">max</span>-connection-per-server=<span class="number">5</span></span><br><span class="line"><span class="comment">#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要</span></span><br><span class="line"><span class="built_in">min</span>-split-size=10M</span><br><span class="line"><span class="comment">#单文件最大线程数, 路由建议值: 5</span></span><br><span class="line">split=<span class="number">10</span></span><br><span class="line"><span class="comment">#下载速度限制</span></span><br><span class="line"><span class="built_in">max</span>-overall-download-limit=<span class="number">0</span></span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line"><span class="built_in">max</span>-download-limit=<span class="number">0</span></span><br><span class="line"><span class="comment">#上传速度限制</span></span><br><span class="line"><span class="built_in">max</span>-overall-upload-limit=<span class="number">0</span></span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line"><span class="built_in">max</span>-upload-limit=<span class="number">0</span></span><br><span class="line"><span class="comment">#断开速度过慢的连接</span></span><br><span class="line"><span class="comment">#lowest-speed-limit=0</span></span><br><span class="line"><span class="comment">#验证用，需要1.16.1之后的release版本</span></span><br><span class="line"><span class="comment">#referer=*</span></span><br><span class="line"><span class="comment">#文件保存路径, 默认为当前启动位置(这里我的是下载到用户的Downloads文件夹下，可以根据需要修改)</span></span><br><span class="line"><span class="built_in">dir</span>=/media/pi/Downloads</span><br><span class="line"><span class="comment">#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本</span></span><br><span class="line"><span class="comment">#disk-cache=0</span></span><br><span class="line"><span class="comment">#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)</span></span><br><span class="line"><span class="comment">#enable-mmap=true</span></span><br><span class="line"><span class="comment">#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长</span></span><br><span class="line"><span class="comment">#所需时间 none &lt; falloc ? trunc &lt;&lt; prealloc, falloc和trunc需要文件系统和内核支持</span></span><br><span class="line">file-allocation=prealloc</span><br><span class="line"><span class="comment">#不进行证书校验</span></span><br><span class="line">check-certificate=false</span><br><span class="line"><span class="comment">#保存下载会话</span></span><br><span class="line">save-session=/home/pi/.config/aria2/aria2.session</span><br><span class="line"><span class="built_in">input</span>-file=/home/pi/.config/aria2/aria2.session</span><br><span class="line"><span class="comment">#断电续传</span></span><br><span class="line">save-session-interval=<span class="number">60</span></span><br></pre></td></tr></table></figure>
<p>注意我这里的下载路径是<code>/media/pi/Downloads</code>，可以根据自己的情况修改;并且我这里设置的rpc密钥是<code>secret</code>。这些设置可以在后面以图形化的方式修改。</p>
<p>​      </p>
<p>配置完成后，还要创建该会话空白文件：</p>
<p><code>touch /home/pi/.config/aria2/aria2.session</code></p>
<p>启动并测试Aria2是否成功启动：</p>
<p><code>aria2c --conf-path=/home/pi/.config/aria2/aria2.config</code></p>
<p>可以使用<code>ps aux|grep aria2</code>查看是否有进程启动，如果有显示则说明启动成功了。</p>
<p><a href="https://img.imgdb.cn/item/6037207a5f4313ce25a40803.jpg"><img src="https://img.imgdb.cn/item/6037207a5f4313ce25a40803.jpg"></a></p>
<h3 id="设置Aria服务和开机启动"><a href="#设置Aria服务和开机启动" class="headerlink" title="设置Aria服务和开机启动"></a>设置Aria服务和开机启动</h3><p>创建并编辑aria.service文件 ：</p>
<p><code>sudo nano /lib/systemd/system/aria.service</code></p>
<p>在该文件写入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Aria2 Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=pi</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/bin/aria2c --conf-path=/home/pi/.config/aria2/aria2.config</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>重新载入服务，并设置开机启动：</p>
<p><code>sudo systemctl daemon-reload sudo systemctl enable aria</code></p>
<p><em>重启</em> 之后我们检查下aria服务的状态：<code>systemctl status aria</code></p>
<p><a href="https://img.imgdb.cn/item/603722165f4313ce25a68fc9.jpg"><img src="https://img.imgdb.cn/item/603722165f4313ce25a68fc9.jpg" alt="重启之后查看服务状态"></a></p>
<h3 id="安装Aria2的Web可视化前端"><a href="#安装Aria2的Web可视化前端" class="headerlink" title="安装Aria2的Web可视化前端"></a>安装Aria2的Web可视化前端</h3><p>首先安装nginx和git：</p>
<p><code>sudo apt install nginx git</code></p>
<p>由于aria2的前端界面有好几种，这里就暂时选用AriaNg做管理界面。</p>
<p>可以在这里下载到最新的版本：<a href="https://github.com/mayswind/AriaNg">AriaNg</a> </p>
<p><a href="https://img.imgdb.cn/item/603755165f4313ce25ff498b.jpg"><img src="https://img.imgdb.cn/item/603755165f4313ce25ff498b.jpg" alt="点击即可下载"></a></p>
<p>进去之在第二个zip包上右键，选择复制链接地址：</p>
<p><a href="https://img.imgdb.cn/item/603755c35f4313ce25003688.jpg"><img src="https://img.imgdb.cn/item/603755c35f4313ce25003688.jpg" alt="下载最新版本"></a></p>
<p>接下来回到ssh终端，执行下载任务，并重命名为aria-ng：</p>
<p><code>wget 你复制的链接 -O aria-ng.zip</code></p>
<p>解压：</p>
<p><code>unzip aria-ng.zip -d aria-ng</code></p>
<p>将aria-ng放到nginx的/var/www/html/目录下，然后设置开机启动nginx：</p>
<p><code>sudo mv aria-ng /var/www/html/</code></p>
<p><code>sudo systemctl enable nginx</code></p>
<p>用浏览器访问树莓派IP下的aria-ng，即：<code>http://你的树莓派地址/aria-ng</code><br>然后在<code>系统设置</code>点击<code>AriaNg设置</code> –&gt; <code>全局</code> –&gt; 设置语言为中文 –&gt; 点击<code>RPC</code>–&gt;修改为 rpc 密钥：<code>secret</code></p>
<p><a href="https://img.imgdb.cn/item/603757505f4313ce25023512.jpg"><img src="https://img.imgdb.cn/item/603757505f4313ce25023512.jpg"></a></p>
<p>这样就配置完我们的AriaNg的Web界面啦。在设置里我们就可以同图形化的方式进行设置各个具体的参数（如果你需要的话）。</p>
<h3 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>各个浏览器相关的插件很多，以火狐为例可以直接在附加组建里搜索Aria2，比如<code>Aria2下载器集成组件</code>：</p>
<p>添加完后会提示设置服务器，我们只需要保持和前面的AriaNg的设置一致即可：</p>
<p><a href="https://img.imgdb.cn/item/603759855f4313ce250565f6.jpg"><img src="https://img.imgdb.cn/item/603759855f4313ce250565f6.jpg"></a></p>
<p><a href="https://img.imgdb.cn/item/60375a135f4313ce250622fc.jpg"><img src="https://img.imgdb.cn/item/60375a135f4313ce250622fc.jpg"></a></p>
<p><a href="https://img.imgdb.cn/item/60375a4f5f4313ce25066d18.jpg"><img src="https://img.imgdb.cn/item/60375a4f5f4313ce25066d18.jpg"></a></p>
<p>全部设置完成之后我们会发现浏览器多出了一个附加组件，可以根据开关决定是否调用树莓派的Aria2下载服务器，点击详情可以直接进入我们的AriaNg的Web控制界面。</p>
<p><a href="https://img.imgdb.cn/item/60375b1d5f4313ce25077bd3.jpg"><img src="https://img.imgdb.cn/item/60375b1d5f4313ce25077bd3.jpg"></a></p>
<p>值得注意的是，从详情进入后可能需要再次配置一次AriaNg页面（浏览器缓存的原因），填写的数据和配置AriaNg的方式一致。</p>
<h3 id="实际效果"><a href="#实际效果" class="headerlink" title="实际效果"></a>实际效果</h3><p>当点击下载按钮时：</p>
<p><a href="https://img.imgdb.cn/item/60375cda5f4313ce2509aa93.jpg"><img src="https://img.imgdb.cn/item/60375cda5f4313ce2509aa93.jpg"></a></p>
<p>点击下载就会调用树莓派的Aria2进行下载，如果不想下载的话可以点击 <em>另存为</em> 转到浏览器本地下载。</p>
<p><a href="https://img.imgdb.cn/item/60375d395f4313ce250a34d2.jpg"><img src="https://img.imgdb.cn/item/60375d395f4313ce250a34d2.jpg"></a></p>
<p>转到AriaNg,可以看到我们的下载已经开始啦。</p>
<p><a href="https://img.imgdb.cn/item/60375d785f4313ce250a81e5.jpg"><img src="https://img.imgdb.cn/item/60375d785f4313ce250a81e5.jpg"></a></p>
<h3 id="BT下载速度慢问题"><a href="#BT下载速度慢问题" class="headerlink" title="BT下载速度慢问题"></a>BT下载速度慢问题</h3><p>有时候我们会发现，使用aria2没有迅雷下载快，甚至下不动，原因是迅雷有自己的服务器，而Aria2没有加速服务器，有些种子一直没几个人上传导致只有几KB的速度甚至完全没速度，这种情况下该怎么办呢？<br> 给Aria2添加Tracker，让Aria2不只是从DHT网络或者种子文件中存储的Tracker信息，从而找到更多的下载源。 </p>
<p><a href="https://www.yaozuopan.top/index.php/archives/1014/">Tracker服务器</a></p>
<p>比如这里汇总了20个常用的最优Tracker：（已经用逗号分割）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bt-tracker=udp://tracker.coppersurfer.tk:<span class="number">6969</span>/announce,udp://tracker.<span class="built_in">open</span>-internet.nl:<span class="number">6969</span>/announce,udp://tracker.skyts.net:<span class="number">6969</span>/announce,udp://tracker.piratepublic.com:<span class="number">1337</span>/announce,udp://tracker.opentrackr.org:<span class="number">1337</span>/announce,udp://<span class="number">9.</span>rarbg.to:<span class="number">2710</span>/announce,udp://retracker.coltel.ru:<span class="number">2710</span>/announce,udp://pubt.<span class="keyword">in</span>:<span class="number">2710</span>/announce,udp://public.popcorn-tracker.org:<span class="number">6969</span>/announce,udp://z.crazyhd.com:<span class="number">2710</span>/announce,udp://wambo.club:<span class="number">1337</span>/announce,udp://tracker4.itzmx.com:<span class="number">2710</span>/announce,udp://tracker1.wasabii.com.tw:<span class="number">6969</span>/announce,udp://tracker.zer0day.to:<span class="number">1337</span>/announce,udp://tracker.xku.tv:<span class="number">6969</span>/announce,udp://tracker.vanitycore.co:<span class="number">6969</span>/announce,udp://ipv4.tracker.harry.lu:<span class="number">80</span>/announce,udp://inferno.demonoid.pw:<span class="number">3418</span>/announce,udp://<span class="built_in">open</span>.facedatabg.net:<span class="number">6969</span>/announce,udp://mgtracker.org:<span class="number">6969</span>/announce</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><a href="https://img.imgdb.cn/item/60375ed35f4313ce250c5b74.png"><img src="https://img.imgdb.cn/item/60375ed35f4313ce250c5b74.png"></a></p>
<p>原创文章，转载请注明出处。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派安装MySQL并且开启远程访问</title>
    <url>/2021/03/10/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85MySQL%E5%B9%B6%E4%B8%94%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h3 id="环境简介"><a href="#环境简介" class="headerlink" title="环境简介"></a>环境简介</h3><p>本次采用的环境仍就是刷入了基于Debian buster的树莓派操作系统。</p>
<p><a href="https://img.imgdb.cn/item/6048b7cc5aedab222c746549.jpg"><img src="https://img.imgdb.cn/item/6048b7cc5aedab222c746549.jpg" alt="环境简介"></a></p>
<p>本来想安装MySQL数据库的， <em>但是查找了一圈发现镜像里木有MySQL数据库，于是便转向了MarinaDB.</em> 这俩数据库，虽说差不多，而且是由同一个团队开发，但是部分的配置文件的地点还是有些不同，经过查找资料，决定将此次过程记录下来，方便日后与大家。</p>
<p>本次使用ssh连接到树莓派进行操作。</p>
<p>树莓派采用的是中科大的镜像源。<a href="http://mirrors.ustc.edu.cn/help/debian.html">中科大源链接</a></p>
<h3 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mariadb-server</span><br></pre></td></tr></table></figure>
<p><a href="https://img.imgdb.cn/item/6048ba7c5aedab222c7626af.jpg"><img src="https://img.imgdb.cn/item/6048ba7c5aedab222c7626af.jpg" alt="安装"></a></p>
<p>安装成功后启动数据库并且配置开机自动启动（可选）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mariadb</span><br><span class="line">sudo systemctl enable mariadb</span><br></pre></td></tr></table></figure>
<p>可以使用<code>systemctl status mariadb</code>查看是否启动。</p>
<h3 id="配置MariaDB的root密码"><a href="#配置MariaDB的root密码" class="headerlink" title="配置MariaDB的root密码"></a>配置MariaDB的root密码</h3><p>首先让我们登陆数据库：<code>sudo mysql -u root -p</code> 首次登陆不需要密码，弹出输入密码的提示直接回车即可。</p>
<p>接下来我们配置一下root用户的密码，依次执行下列三句话：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update mysql.user set plugin&#x3D;&#39;mysql_native_password&#39; where user&#x3D;&#39;root&#39;;</span><br><span class="line">update mysql.user set password&#x3D;password(&quot;你的root密码&quot;) where user&#x3D;&#39;root&#39;; </span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<p><a href="https://img.imgdb.cn/item/6048bd2d5aedab222c77cc9d.jpg"><img src="https://img.imgdb.cn/item/6048bd2d5aedab222c77cc9d.jpg" alt="更改root密码"></a></p>
<p>这样root的密码就配置好了。</p>
<h3 id="设置打开MariaDB的远程连接许可"><a href="#设置打开MariaDB的远程连接许可" class="headerlink" title="设置打开MariaDB的远程连接许可"></a>设置打开MariaDB的远程连接许可</h3><p>回到终端环境。首先编辑配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;mysql&#x2F;mariadb.conf.d&#x2F;50-server.cnf</span><br></pre></td></tr></table></figure>
<p>注释掉<code>bind-address = 127.0.0.1</code>这一行：</p>
<h3 id="设置用户的远程登录权限"><a href="#设置用户的远程登录权限" class="headerlink" title="设置用户的远程登录权限"></a><strong>设置用户的远程登录权限</strong></h3><p>在数据库中：</p>
<blockquote>
<p>方法一： 设置新远程用户（推荐）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE USER &#39;你的用户名&#39;@&#39;%&#39; IDENTIFIED BY &#39;你的密码&#39;; </span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;你的用户名&#39;@&#39;%&#39; IDENTIFIED BY &#39;你的密码&#39; WITH GRANT OPTION; </span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<p><a href="https://img.imgdb.cn/item/6048c09e5aedab222c7a3556.jpg"><img src="https://img.imgdb.cn/item/6048c09e5aedab222c7a3556.jpg" alt="创建新用户"></a></p>
<p>例如这里创建了一个名为<code>raspisql</code>的用户。</p>
</blockquote>
<blockquote>
<p>方法二： 直接修改root用户的远程权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">UPDATE user SET host &#x3D; &#39;%&#39; WHERE user &#x3D; &#39;root&#39;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;&#39; WITH GRANT OPTION; </span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<p>完成之后退出数据库。</p>
</blockquote>
<h3 id="重启MariaDB"><a href="#重启MariaDB" class="headerlink" title="重启MariaDB"></a>重启MariaDB</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart mariadb</span><br></pre></td></tr></table></figure>
<h3 id="本地远程测试"><a href="#本地远程测试" class="headerlink" title="本地远程测试"></a>本地远程测试</h3><p>本地使用DataGrip数据库管理软件进行连接测试：</p>
<p>在DataGrip中依次点击File-&gt; New-&gt;Data Source-&gt; MariaDB：</p>
<p><a href="https://img.imgdb.cn/item/6048c1e65aedab222c7b43a3.png"><img src="https://img.imgdb.cn/item/6048c1e65aedab222c7b43a3.png" alt="本地连接"></a></p>
<p>接着填好相关信息，第一次使用可能需要下载驱动程序。</p>
<p><a href="https://img.imgdb.cn/item/6048c3e15aedab222c7d0161.jpg"><img src="https://img.imgdb.cn/item/6048c3e15aedab222c7d0161.jpg" alt="dataGrip"></a></p>
<p>配置完成后就出现在了我们的侧边栏中，此时与你在本地的数据库是一样的。比如我这里将普通用户和root用户都进行了链接：</p>
<p><a href="https://img.imgdb.cn/item/6048c4645aedab222c7d77ce.jpg"><img src="https://img.imgdb.cn/item/6048c4645aedab222c7d77ce.jpg" alt="2"></a></p>
<p>这下操作就和本地的一模一样。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
</search>
